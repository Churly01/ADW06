-- ETL Tables

CREATE TABLE IF NOT EXISTS 2306_apache_geoip
	WITH (KAFKA_TOPIC='adw.2306.geoip')
	AS
	SELECT geoip,
		geoip->ip AS ip,
		geoip->`as`->organization->name AS nomorg,
		geoip->`as`->number AS numorg,
		geoip->geo->postal_code AS postal_code,
		geoip->geo->city_name AS city_name,
		geoip->geo->country_name AS country_name,
		geoip->geo->country_iso_code AS country_iso_code,
		geoip->geo->region_name AS region_name,
		geoip->geo->region_iso_code AS region_iso_code,
		geoip->geo->continent_code AS continent_code,
		geoip->geo->timezone AS timezone,
		geoip->geo->location->lon AS lon,
		geoip->geo->location->lat AS lat,
		COUNT(*) AS ipc
	FROM 2306_apache_filtered_keyed
	GROUP BY geoip;

CREATE TABLE IF NOT EXISTS 2306_Q1
	WITH (KAFKA_TOPIC='adw.2306.Q1')
	AS
	SELECT MSK.KEY AS KEY,
		MSK.NV AS V,
		COUNT(AFK.http) AS N
	FROM 2306_monitor_stream_keyed MSK
		INNER JOIN 2306_apache_filtered_keyed AFK
		WITHIN 300 DAYS
		GRACE PERIOD 15 MINUTES
		ON AFK.KEY = MSK.KEY
	GROUP BY MSK.KEY, MSK.NV;

CREATE TABLE IF NOT EXISTS 2306_Q2
	WITH (KAFKA_TOPIC='adw.2306.Q2')
	AS
	SELECT MSK.KEY AS KEY,
		ARRAY[MAX(MSK.UV)] AS UV,
		COLLECT_SET(AFK.HTTP->REQUEST->METHOD) AS MET,
		COLLECT_SET(AFK.HTTP->RESPONSE->STATUS_CODE) AS STC,
		COUNT(AFK.http) AS N
	FROM 2306_monitor_stream_keyed MSK
		INNER JOIN 2306_apache_filtered_keyed AFK
		WITHIN 300 DAYS
		GRACE PERIOD 15 MINUTES
		ON AFK.KEY = MSK.KEY
	WHERE MSK.KEY->UAID= '6248c7a654ab4c1061918e0801cb074f5f01983d'
	GROUP BY MSK.KEY;